#!/bin/bash

#This script take a set of bursts generated by a particular set of meta parameters and separates them into a groups of three to then be passed to the python script for wavelet analysis.'

#Define meta parameters
#MTOT=($(shuf -i 20-80 -n 5))
MTOT=( 58 )
AMPS=( 1.0 1.2 1.4 1.6 1.8 2.0 2.2 2.4 2.6 2.8 3.0)
MASS_RATIO=0.3
DESTAR=0.2
TSTAR=-4.0
ANCHOR_IDX=1
NUM_RUNS_ON=1000
NUM_RUNS_OFF=5000
CODE_PATH='/home/bcheeseboro/eccprior_proj/current_research_stuff/code/ecc_prior/wavelet_mcmc_code/current_wavelet_testing_code'

#Define time window
TMIN=-8
TMAX=0

#generate bursts for the random masses
for ii in ${MTOT[@]} ; do

OUTDIR='../../wavelet_mcmc_data/kombine_eccprior/all_meta/triple_wavelet/amp_runs/Q_bounded_rerun/mtot_'${ii}'/'
    if [ -d ${OUTDIR} ] && echo "Directory ${OUTDIR}" ; then
         continue
    else
         mkdir ${OUTDIR}
         python burst_generator.py -o ${OUTDIR} -m $ii -q ${MASS_RATIO} --destar ${DESTAR} --tstar ${TSTAR} --tmin ${TMIN} --tmax ${TMAX}
    fi
    #Do the on runs 
    pushd ${OUTDIR}
    ONDIR='eccprior_on/'
    mkdir ${ONDIR}
    pushd ${ONDIR}
    for jj in ${AMPS[@]} ; do
        
        AMPDIR='amp_'${jj}'/'
        mkdir ${AMPDIR}
        pushd ${AMPDIR}
            	
         python ${CODE_PATH}/triple_wavelet_testing_eccprior_on_amp_var.py -m ${ii} -q ${MASS_RATIO} -A ${jj} --anchor_idx ${ANCHOR_IDX} --tmin ${TMIN} --tmax ${TMAX} --burst_file ../../bursts.dat --runs ${NUM_RUNS_ON}
        python ${CODE_PATH}/post_processing_plots.py
        popd

    done
    #Now do the off runs
    popd
    OFFDIR='eccprior_off/'
    mkdir ${OFFDIR}
    pushd ${OFFDIR}
    
    for aa in ${AMPS[@]} ; do
            
        AMPSDIR='amp_'${aa}'/'
        mkdir ${AMPSDIR}
        pushd ${AMPSDIR}
            	
        python ${CODE_PATH}/triple_wavelet_testing_eccprior_off_amp_var.py -m ${ii} -q ${MASS_RATIO} -A ${aa} --anchor_idx ${ANCHOR_IDX} --tmin ${TMIN} --tmax ${TMAX} --burst_file ../../bursts.dat --runs ${NUM_RUNS_OFF}
        python ${CODE_PATH}/post_processing_plots.py
        popd

    done
    popd
    popd
done  



